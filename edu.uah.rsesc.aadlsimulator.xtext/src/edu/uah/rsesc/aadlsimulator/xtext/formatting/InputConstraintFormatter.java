/*
 * generated by Xtext 2.11.0
 */
package edu.uah.rsesc.aadlsimulator.xtext.formatting;

import com.google.inject.Inject;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import edu.uah.rsesc.aadlsimulator.xtext.services.InputConstraintGrammarAccess;

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormatter} as an example
 */
@SuppressWarnings("restriction")
public class InputConstraintFormatter extends AbstractDeclarativeFormatter {
	@Inject
	private InputConstraintGrammarAccess grammarAccess; 
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
		c.setNoSpace().around(grammarAccess.getConstRefAccess().getColonColonKeyword_1_1());
		c.setNoSpace().around(grammarAccess.getElementRefAccess().getFullStopKeyword_2_0());
		c.setNoSpace().around(grammarAccess.getPreAccess().getLeftParenthesisKeyword_2());
		c.setNoSpace().around(grammarAccess.getPreAccess().getRightParenthesisKeyword_4());		
		c.setNoSpace().around(grammarAccess.getRandomElementAccess().getFullStopKeyword_2());
		c.setNoSpace().around(grammarAccess.getRandomIntegerAccess().getFullStopKeyword_2());
		c.setNoSpace().around(grammarAccess.getRandomRealAccess().getFullStopKeyword_2());
		c.setNoSpace().around(grammarAccess.getSetAccess().getLeftCurlyBracketKeyword_1());
		c.setNoSpace().around(grammarAccess.getSetAccess().getRightCurlyBracketKeyword_3());
		c.setNoSpace().around(grammarAccess.getIntervalAccess().getLeftClosedAssignment_1_0());
		c.setNoSpace().around(grammarAccess.getIntervalAccess().getLeftParenthesisKeyword_1_1());
		c.setNoSpace().around(grammarAccess.getIntervalAccess().getRightClosedAssignment_5_0());
		c.setNoSpace().around(grammarAccess.getIntervalAccess().getRightParenthesisKeyword_5_1());
		c.setNoSpace().before(grammarAccess.getIntervalAccess().getCommaKeyword_3());
		c.setNoSpace().around(grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1());
	}
}
